diff --git a/drivers/net/ethernet/intel/igb/e1000_82575.h b/drivers/net/ethernet/intel/igb/e1000_82575.h
index 63ec253ac..0515505b2 100644
--- a/drivers/net/ethernet/intel/igb/e1000_82575.h
+++ b/drivers/net/ethernet/intel/igb/e1000_82575.h
@@ -108,6 +108,7 @@ union e1000_adv_tx_desc {
 
 /* Adv Transmit Descriptor Config Masks */
 #define E1000_ADVTXD_MAC_TSTAMP   0x00080000 /* IEEE1588 Timestamp packet */
+#define E1000_ADVTXD_MAC_TSTAMP_ONESTEP 0x00040000 /* IEEE1588 Timestamp pkt onestep*/
 #define E1000_ADVTXD_DTYP_CTXT    0x00200000 /* Advanced Context Descriptor */
 #define E1000_ADVTXD_DTYP_DATA    0x00300000 /* Advanced Data Descriptor */
 #define E1000_ADVTXD_DCMD_EOP     0x01000000 /* End of Packet */
diff --git a/drivers/net/ethernet/intel/igb/igb.h b/drivers/net/ethernet/intel/igb/igb.h
index aaa954aae..b02371ed1 100644
--- a/drivers/net/ethernet/intel/igb/igb.h
+++ b/drivers/net/ethernet/intel/igb/igb.h
@@ -221,6 +221,7 @@ enum igb_tx_flags {
 	IGB_TX_FLAGS_VLAN	= 0x01,
 	IGB_TX_FLAGS_TSO	= 0x02,
 	IGB_TX_FLAGS_TSTAMP	= 0x04,
+	IGB_TX_FLAGS_TSTAMP_ONESTEP	= 0x08,
 
 	/* olinfo flags */
 	IGB_TX_FLAGS_IPV4	= 0x10,
diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 03f78fdb0..c15349317 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -6037,6 +6037,10 @@ static u32 igb_tx_cmd_type(struct sk_buff *skb, u32 tx_flags)
 	/* set timestamp bit if present */
 	cmd_type |= IGB_SET_FLAG(tx_flags, IGB_TX_FLAGS_TSTAMP,
 				 (E1000_ADVTXD_MAC_TSTAMP));
+				 
+	cmd_type |= IGB_SET_FLAG(tx_flags, IGB_TX_FLAGS_TSTAMP_ONESTEP,
+				 (E1000_ADVTXD_MAC_TSTAMP_ONESTEP));
+
 
 	/* insert frame checksum */
 	cmd_type ^= IGB_SET_FLAG(skb->no_fcs, 1, E1000_ADVTXD_DCMD_IFCS);
@@ -6371,6 +6375,11 @@ netdev_tx_t igb_xmit_frame_ring(struct sk_buff *skb,
 			adapter->tx_hwtstamp_skipped++;
 		}
 	}
+uint16_t ethertype=((uint16_t )skb->data[13+4] << 8) + skb->data[12+4]; //from possition ethtype+4(+1)
+//printk("Ethertype:%x\n",ethertype);
+if ((ethertype==0x0008)) tx_flags |= IGB_TX_FLAGS_TSTAMP_ONESTEP;
+ethertype=((uint16_t )skb->data[13] << 8) + skb->data[12]; //from possition ethtype(+1)
+if ((ethertype==0x0008)) tx_flags |= IGB_TX_FLAGS_TSTAMP_ONESTEP; // tsn_tunnel
 
 	if (skb_vlan_tag_present(skb)) {
 		tx_flags |= IGB_TX_FLAGS_VLAN;
diff --git a/drivers/net/ethernet/intel/igb/igb_ptp.c b/drivers/net/ethernet/intel/igb/igb_ptp.c
index 7cc5428c3..8255662f6 100644
--- a/drivers/net/ethernet/intel/igb/igb_ptp.c
+++ b/drivers/net/ethernet/intel/igb/igb_ptp.c
@@ -1087,7 +1087,8 @@ static int igb_ptp_set_timestamp_mode(struct igb_adapter *adapter,
 	/* enable/disable TX */
 	regval = rd32(E1000_TSYNCTXCTL);
 	regval &= ~E1000_TSYNCTXCTL_ENABLED;
-	regval |= tsync_tx_ctl;
+	tsync_tx_ctl|=48<<8; //bytes offset for onestep-timestamp
+	regval |= tsync_tx_ctl;	
 	wr32(E1000_TSYNCTXCTL, regval);
 
 	/* enable/disable RX */
